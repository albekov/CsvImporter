@using CsvImport.Model
@model CsvImport.Web.ViewModels.PeopleListViewModel

@{
    var result = Model.Result;
    var hasRecords = result.Records.Any();
    var sort = Model.SortString;

    ViewBag.Title = $"{result.Count} записей";
}

@helper Paging(int page, int pages, string sort)
{
    var firstPage = page <= 1;
    var lastPage = page >= pages;
    <a href="@(firstPage ? "" : Url.Action("Index", new {page = 1, sort}))" class="btn btn-default @(firstPage ? "disabled" : "")">
        <span class="glyphicon glyphicon glyphicon-step-backward" aria-hidden="true"></span>
    </a>
    <a href="@(firstPage ? "" : Url.Action("Index", new {page = page - 1, sort}))" class="btn btn-default @(firstPage ? "disabled" : "")">
        <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
    </a>
    @:&nbsp;&nbsp;@page / @pages&nbsp;&nbsp;
    <a href="@(lastPage ? "" : Url.Action("Index", new {page = page + 1, sort}))" class="btn btn-default @(lastPage ? "disabled" : "")">
        <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
    </a>
    <a href="@(lastPage ? "" : Url.Action("Index", new {page = pages, sort}))" class="btn btn-default @(lastPage ? "disabled" : "")">
        <span class="glyphicon glyphicon glyphicon-step-forward" aria-hidden="true"></span>
    </a>
}

@helper SortingColumn(string title, string name)
{
    var order = Model.Sortings[name].Order;
    var sortString = Model.Sortings[name].SortString;
    <a href="@Url.Action("Index", new {sort = sortString})">
        @title
        &nbsp;
        @if (order == true)
        {
            @:<span class="glyphicon glyphicon-triangle-top" aria-hidden="true" />
        }
        @if (order == false)
        {
            @:<span class="glyphicon glyphicon-triangle-bottom" aria-hidden="true" />
        }
    </a>
}

<div class="row">
    <div class="col-sm-5">
        <div class="row">
            <button class="btn btn-default toggle-import"><span class="glyphicon glyphicon-import" aria-hidden="true"></span>&nbsp;Загрузить из CSV</button>
            @if (hasRecords)
            {
                @:&nbsp;
                <a href="@Url.Action("Export")" class="btn btn-default"><span class="glyphicon glyphicon-export" aria-hidden="true"></span>&nbsp;Сохранить в CSV</a>
            }
        </div>
        @using (Html.BeginForm("Import", "Home", FormMethod.Post, new {enctype = "multipart/form-data", @class = "form-inline import-form"}))
        {
            <div class="form-group">
                <input type="file" name="file" class="form-control"/>
            </div>
            <input type="submit" value="Загрузить" class="btn btn-default"/>
        }
    </div>
    @if (hasRecords)
    {
        <div class="col-sm-3">
            <div style="margin: 10px; text-align: center;">
                @Paging(result.Page, result.Pages, sort)
            </div>
        </div>
    }
</div>

@if (hasRecords)
{
    <table class="table table-striped table-hover">
        <thead>
        <tr>
            <th class="col-md-3">@SortingColumn("ФИО", nameof(People.FullName))</th>
            <th class="col-md-2">@SortingColumn("Дата рождения", nameof(People.BirthDate))</th>
            <th class="col-md-3">@SortingColumn("E-mail", nameof(People.Email))</th>
            <th class="col-md-2">@SortingColumn("Телефон", nameof(People.Phone))</th>
            <th class="col-md-1"></th>
            <th class="col-md-1"></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var record in result.Records)
        {
            <tr>
                <td>@record.FullName</td>
                <td>@record.BirthDate</td>
                <td>@record.Email</td>
                <td>@record.Phone</td>
                <td>@Html.ActionLink("редактировать", "Edit", new {id = record.Id, page = result.Page, sort })</td>
                <td>@Html.ActionLink("удалить", "Delete", new {id = record.Id, page = result.Page, sort})</td>
            </tr>
        }
        </tbody>
    </table>
}
else
{
    <h3>Нет данных</h3>
}